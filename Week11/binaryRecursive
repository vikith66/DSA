#include <iostream>
using namespace std;

class BinarySearch {
private:
    int arr[50], n;
public:
    BinarySearch(int num) {
        n = num;
    }
    void input() {
        cout << "Enter the elements in sorted order:" << endl;
        for (int i = 0; i < n; i++)
            cin >> arr[i];
    }
    void display() {
        cout << "Array elements: ";
        for (int i = 0; i < n; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
    int binary_search_recursive(int left, int right, int key) {
        if (left <= right) {
            int mid = left + right / 2;
            if (arr[mid] == key)
                return mid; 
            else if (arr[mid] > key)
                return binary_search_recursive(left, mid - 1, key);
            else
                return binary_search_recursive(mid + 1, right, key);
        }
        return -1; 
    }
    void search_element() {
        int key;
        cout << "Enter the element to search: ";
        cin >> key;
        int result = binary_search_recursive(0, n - 1, key);
        if (result != -1)
            cout << "Element found at position " << result + 1 << endl;
        else
            cout << "Element not found!" << endl;
    }
};

int main() {
    int n, choice;
    cout << "Enter the number of elements: ";
    cin >> n;
    BinarySearch bs(n);
    bs.input();

    while (true) {
        cout << "\n1. Display Elements\n2. Search Element\n3. Exit\nEnter your choice: ";
        cin >> choice;
        switch (choice) {
            case 1:
                bs.display();
                break;
            case 2:
                bs.search_element();
                break;
            case 3:
                return 0;
            default:
                cout << "Invalid choice! Try again.\n";
        }
    }
    return 0;
}
